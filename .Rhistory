Sys.which("make")
install.packages("jsonlite", type = "source")
hola <- 1
getwd()
getwd()
nuevo_dir <- nuevo_dir<- "c:/Act_correl_Pedro"
setwd(nuevo_dir)
getwd()
library(readxl)
data <- read_excel("C:/Users/combe/Desktop/Informatica/data.xls")
View(data)
#Ejercicio 3
correlacion_matriz <- cor(data)
print(correlacion_matriz)
install.packages("psych")
library(psych)
#Ejercicio 4
resultados_corr <- corr.test(data)
corrplot(resultados_corr$r, method="circle", type="upper", sig.level=0.05, insig="blank")
install.packages("corrplot")
library(corrplot)
corrplot(resultados_corr$r, method="circle", type="upper", sig.level=0.05, insig="blank")
install.packages("Hmisc")
library(Hmisc)
#Ejercicio 5
matriz_correl <- rcorr(as.matrix(data))
print(matriz_correl)
plot(data$altura, data$peso, main = "Diagrama de dispersión: Altura vs Peso",
xlab = "Altura", ylab = "Peso", pch = 19)
# Agregar la línea de regresión
abline(lm(peso ~ altura, data = data), col = "red")
#Ejercicio 7
correlacion_peso_alt <- cor(data$altura,data$peso)
text(x = max(data$altura), y = max(data$peso), labels = paste("Correlación:", round(correlation, 2)))
text(x = max(data$altura), y = max(data$peso), labels = paste("Correlación:", round(correlacion_peso_alt, 2)))
plot(data$altura, data$peso, main = "Correlación entre Altura y Peso",
xlab = "Longitud", ylab = "Peso", pch = 19, col = "blue")
text(x = max(data$altura), y = max(data$peso), labels = paste("Correlación:", round(correlacion_peso_alt, 2)))
#Ejercicio 8
distancia <- c(1.1, 100.2, 90.3, 5.4, 57.5, 6.6, 34.7, 65.8, 57.9, 86.1)
n_cuentas <- c(110, 2, 6, 98, 40, 94, 31, 5, 8, 10)
datos <- data.frame(distancia,n_cuentas)
correlacion_dist_cuent <- cor(datos$distancia, datos$n_cuentas)
print(paste("Coeficiente de correlación:", correlacion_dist_cuent))
#c
p_value <- cor.test(datos$distancia, datos$n_cuentas)$p.value
print(paste("Nivel de significancia (p-value):", p_value))
#d
ci <- cor.test(datos$distancia, datos$n_cuentas)$conf.int
print(paste("Intervalo de confianza al 95%:", ci))
#e
correlacion <- cor(datos$distancia, datos$n_cuentas)
print(paste("Coeficiente de correlación:", correlacion))
if(correlacion > 0) {
print("La correlación es positiva, lo que sugiere que a medida que la distancia aumenta, el número de piezas también tiende a aumentar.")
} else if(correlacion < 0) {
print("La correlación es negativa, lo que sugiere que a medida que la distancia aumenta, el número de piezas tiende a disminuir.")
} else {
print("No hay correlación lineal entre las variables.")
}
#f
p_value <- cor.test(datos$distancia, datos$n_cuentas)$p.value
if(p_value < 0.05) {
print("La relación es significativa.")
} else {
print("La relación no es significativa.")
}
y_linear <- 2 * x + rnorm(length(x), mean = 0, sd = 2)
#Rel lineal
x <- seq(1, 10, by = 1)
y_linear <- 2 * x + rnorm(length(x), mean = 0, sd = 2)
#Rel monotona
y_monotona <- c(5, 4, 3, 2, 1, 1, 1, 1, 1, 1)
datos_rel <- data.frame(x, y_linear, y_monotona)
par(mfrow = c(1, 2)
graf_rel_linear <- plot(datos_rel$x, datos_rel$y_linear, main = "Relación Lineal", xlab = "Variable X", ylab = "Variable Y", pch = 16)
graf_rel_linear <- plot(datos_rel$x, datos_rel$y_linear, main = "Relación Lineal", xlab = "Variable X", ylab = "Variable Y", pch = 16)
abline(lm(y_linear ~ x, data = datos_rel), col = "red")
legend("topleft", legend = "y = 2x", col = "red", lty = 1, bty = "n")
graf_rel_monot <- plot(datos_rel$x, datos_rel$y_monotona, main = "Relación Monótona", xlab = "Variable X", ylab = "Variable Y", pch = 16)
#Supongamos que tenemos dos variables x y y que experimentan una relación monótona. Se realiza la prueba de correlación de Spearman para evaluar esta relación.
x <- c(1, 2, 3, 4, 5)
y_monotona <- c(5, 4, 3, 2, 1)
correlacion <- cor.test(x, y_monotona, method = "spearman")
print(correlacion)
